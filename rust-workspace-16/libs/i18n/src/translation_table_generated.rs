// Code generated by tools/compile-translations.go. DO NOT EDIT.
// source: po/*.po

// Copyright (C) 2020  Matthew "strager" Glazar
// See end of file for extended copyright information.

use crate::translation_table::*;

pub const TRANSLATION_TABLE_LOCALE_COUNT: u32 = 5;
pub const TRANSLATION_TABLE_MAPPING_TABLE_SIZE: u16 = 64;

pub const UNTRANSLATED_STRINGS: [&str; 63] = [
    "'>' is not allowed directly in JSX text; write {{'>'} or &gt; instead",
    "'do-while' loop",
    "'for' loop",
    "'if' statement",
    "'while' loop",
    "'with' statement",
    "'{0}' is not allowed for strings; use {1} instead",
    "'}' is not allowed directly in JSX text; write {{'}'} instead",
    "BigInt literal contains decimal point",
    "BigInt literal contains exponent",
    "RegExp literal flags cannot contain Unicode escapes",
    "a 'do-while' loop",
    "a 'for' loop",
    "a 'while' loop",
    "a 'with' statement",
    "a labelled statement",
    "a {{0} b }} c",
    "an 'if' statement",
    "binary number literal has no digits",
    "character is not allowed in identifiers",
    "code point in Unicode escape sequence must not be greater than U+10FFFF",
    "code point out of range",
    "escaped character is not allowed in identifiers",
    "escaping '-' is not allowed in tag names; write '-' instead",
    "expected hexadecimal digits in Unicode escape sequence",
    "expected {1:headlinese}",
    "expected {1:singular}",
    "free {1} and {0} {1} {2}",
    "hex number literal has no digits",
    "integer cannot be represented and will be rounded to '{1}'",
    "invalid UTF-8 sequence",
    "invalid hex escape sequence: {0}",
    "keywords cannot contain escape sequences",
    "labelled statement",
    "legacy octal literal may not be BigInt",
    "legacy octal literals may not contain underscores",
    "number literal contains consecutive underscores",
    "number literal contains trailing underscore(s)",
    "octal literal may not have decimal",
    "octal literal may not have exponent",
    "octal number literal has no digits",
    "second message here",
    "see here",
    "something happened",
    "test for multiple messages",
    "this {0} looks fishy",
    "this {1} looks fishy",
    "unclosed block comment",
    "unclosed identifier escape sequence",
    "unclosed regexp literal",
    "unclosed string literal",
    "unclosed template",
    "unexpected '#'",
    "unexpected '@'",
    "unexpected '\\' in identifier",
    "unexpected characters in binary literal",
    "unexpected characters in hex literal",
    "unexpected characters in number literal",
    "unexpected characters in octal literal",
    "unexpected control character",
    "unicode byte order mark (BOM) cannot appear before #! at beginning of script",
    "unopened block comment",
    "what is this '{1}' nonsense?",
];

pub const TRANSLATION_DATA_MAPPING_TABLE: [TranslationTableMappingEntry;
    TRANSLATION_TABLE_MAPPING_TABLE_SIZE as usize] = [
    TranslationTableMappingEntry([0, 0, 0, 0, 0, 0]), //
    TranslationTableMappingEntry([1, 2177, 0, 5627, 0, 8936]), //
    TranslationTableMappingEntry([94, 2240, 0, 5697, 0, 9006]), //
    TranslationTableMappingEntry([112, 2253, 0, 5713, 0, 9022]), //
    TranslationTableMappingEntry([125, 2269, 0, 5724, 0, 9033]), //
    TranslationTableMappingEntry([138, 2293, 0, 5741, 0, 9048]), //
    TranslationTableMappingEntry([153, 2307, 0, 5754, 0, 9061]), //
    TranslationTableMappingEntry([168, 2345, 0, 5773, 0, 9078]), //
    TranslationTableMappingEntry([237, 2393, 0, 5819, 0, 9128]), //
    TranslationTableMappingEntry([320, 2448, 3949, 5881, 7694, 9190]), //
    TranslationTableMappingEntry([352, 2480, 4006, 5915, 7739, 9228]), //
    TranslationTableMappingEntry([382, 2513, 4046, 5945, 0, 9261]), //
    TranslationTableMappingEntry([438, 2551, 0, 6009, 0, 9313]), //
    TranslationTableMappingEntry([461, 2566, 0, 6028, 0, 9331]), //
    TranslationTableMappingEntry([479, 2584, 0, 6042, 0, 9344]), //
    TranslationTableMappingEntry([499, 2600, 0, 6058, 0, 9359]), //
    TranslationTableMappingEntry([0, 0, 0, 6081, 0, 9378]), //
    TranslationTableMappingEntry([519, 2640, 0, 0, 0, 9399]), //
    TranslationTableMappingEntry([533, 2654, 0, 6107, 0, 9413]), //
    TranslationTableMappingEntry([551, 2680, 4109, 6128, 7783, 9431]), //
    TranslationTableMappingEntry([587, 2712, 4161, 6163, 7825, 9467]), //
    TranslationTableMappingEntry([621, 2742, 4208, 6209, 0, 9507]), //
    TranslationTableMappingEntry([705, 2800, 4304, 6286, 7869, 9579]), //
    TranslationTableMappingEntry([751, 2818, 4330, 6325, 7887, 9603]), //
    TranslationTableMappingEntry([815, 2871, 0, 6379, 0, 9651]), //
    TranslationTableMappingEntry([889, 2907, 4384, 6435, 7935, 9711]), //
    TranslationTableMappingEntry([944, 2988, 0, 6508, 0, 9766]), //
    TranslationTableMappingEntry([968, 3012, 0, 6532, 0, 9790]), //
    TranslationTableMappingEntry([990, 3034, 0, 0, 0, 9812]), //
    TranslationTableMappingEntry([1017, 3059, 4456, 6554, 7992, 9837]), //
    TranslationTableMappingEntry([0, 3092, 0, 6592, 0, 9870]), //
    TranslationTableMappingEntry([1058, 3160, 4504, 6660, 8028, 9929]), //
    TranslationTableMappingEntry([1083, 3206, 4529, 6687, 8050, 9952]), //
    TranslationTableMappingEntry([1117, 3221, 4572, 6727, 8087, 9985]), //
    TranslationTableMappingEntry([0, 0, 0, 6782, 0, 10026]), //
    TranslationTableMappingEntry([1174, 3293, 4639, 6804, 8133, 10045]), //
    TranslationTableMappingEntry([1228, 3298, 4701, 6846, 8185, 10084]), //
    TranslationTableMappingEntry([1289, 3348, 4776, 6895, 8249, 10134]), //
    TranslationTableMappingEntry([1358, 3371, 4855, 6936, 8300, 10182]), //
    TranslationTableMappingEntry([1398, 3397, 4916, 6975, 8356, 10229]), //
    TranslationTableMappingEntry([1448, 3418, 4969, 7016, 8400, 10264]), //
    TranslationTableMappingEntry([1496, 3445, 5013, 7053, 8443, 10300]), //
    TranslationTableMappingEntry([0, 0, 0, 0, 0, 10335]), //
    TranslationTableMappingEntry([1531, 3482, 0, 7085, 0, 10355]), //
    TranslationTableMappingEntry([1542, 3491, 0, 7095, 0, 10364]), //
    TranslationTableMappingEntry([0, 0, 0, 0, 0, 10383]), //
    TranslationTableMappingEntry([1556, 3517, 0, 7110, 0, 10410]), //
    TranslationTableMappingEntry([1589, 3538, 0, 7135, 0, 10431]), //
    TranslationTableMappingEntry([1622, 3559, 5063, 7160, 8481, 10452]), //
    TranslationTableMappingEntry([1647, 3609, 5094, 7196, 8511, 10475]), //
    TranslationTableMappingEntry([1683, 3621, 5145, 7234, 8548, 10511]), //
    TranslationTableMappingEntry([1710, 3646, 5173, 7256, 8573, 10535]), //
    TranslationTableMappingEntry([1733, 3671, 5201, 7278, 8599, 10559]), //
    TranslationTableMappingEntry([1752, 3690, 5221, 7304, 8614, 10577]), //
    TranslationTableMappingEntry([1768, 3702, 5235, 7319, 8631, 10592]), //
    TranslationTableMappingEntry([1785, 3713, 5249, 7334, 8648, 10607]), //
    TranslationTableMappingEntry([1816, 3725, 5283, 7369, 8681, 10636]), //
    TranslationTableMappingEntry([1862, 3765, 5332, 7415, 8718, 10676]), //
    TranslationTableMappingEntry([1913, 3802, 5377, 7464, 8752, 10713]), //
    TranslationTableMappingEntry([1950, 3824, 5429, 7501, 8789, 10753]), //
    TranslationTableMappingEntry([1995, 3850, 5476, 7544, 8825, 10792]), //
    TranslationTableMappingEntry([2022, 3880, 5510, 7575, 8853, 10821]), //
    TranslationTableMappingEntry([2120, 3917, 5596, 7657, 0, 10898]), //
    TranslationTableMappingEntry([2147, 3920, 0, 0, 0, 10921]), //
];

pub const TRANSLATION_DATA_STRING_TABLE: &[u8] = "\
        \0\
        '>' darf nicht direkt in JSX-Text verwendet werden. Anstattdessen {{'>} oder &gt; schreiben.\0\
        do-while-Schleife\0\
        for-Schleife\0\
        if-Anweisung\0\
        while-Schleife\0\
        with-Anweisung\0\
        '{0}' ist f\u{00fc}r Strings nicht erlaubt. '{1}' anstattdessen verwenden.\0\
        '}' darf nicht direkt in JSX-Text verwendet werden. Anstattdessen {{'}'} schreiben\0\
        BigInt-Literal mit Dezimalpunkt\0\
        BigInt-Literal mit Exponenten\0\
        RegExp-Literale d\u{00fc}rfen keine Unicode Escapes enthalten\0\
        eine do-While-Schleife\0\
        eine for-Schleife\0\
        eine while-Schleife\0\
        eine with-Anweisung\0\
        a {{0} b }} c\0\
        eine if-Anweisung\0\
        Bin\u{00e4}res Zahlenliteral ohne Ziffern\0\
        Ung\u{00fc}ltiges Zeichen in Bezeichner\0\
        Codepunkt innerhalb der Unicode-Escapesequenz darf nicht gr\u{00f6}\u{00df}er als U+10FFFF sein\0\
        Codepunkt au\u{00df}erhalb des zul\u{00e4}ssigen Bereichs\0\
        Escape-Zeichen darf nicht nicht in Bezeichnern verwendet werden\0\
        Escape von '-' ist in Tagnamen nicht erlaubt. '-' anstattdessen schreiben\0\
        Hexadezimale Ziffern in Unicode-Escapesequenz erwartet\0\
        {1:headlinese} erwartet\0\
        {1:singular} erwartet\0\
        freies {1} und {0} {1} {2}\0\
        Hexadezimales Zahlenliteral ohne Ziffern\0\
        Ung\u{00fc}ltige UTF-8 Sequenz\0\
        Ung\u{00fc}ltige Hex-Escapesequenz: {0}\0\
        Schl\u{00fc}sselworte d\u{00fc}rfen keine Escapesequenzen beinhalten\0\
        Veraltete Oktalliterale sind in BigInts nicht erlaubt\0\
        Veraltete Oktalliterale d\u{00fc}rfen keine Unterstriche enthalten\0\
        Zahlenliteral darf keine aufeinanderfolgenden Unterstriche enthalten\0\
        Zahlenliteral endet mit Unterstrich(en)\0\
        Oktalliterale mit Dezimalpunkt sind nicht erlaubt\0\
        Oktalliterale mit Exponenten sind nicht erlaubt\0\
        Oktales Zahlenliteral ohne Ziffern\0\
        siehe hier\0\
        etwas geschah\0\
        dieses {0} sieht merkw\u{00fc}rdig aus\0\
        dieses {1} sieht merkw\u{00fc}rdig aus\0\
        Blockkommentar ohne Ende\0\
        Unbeendete Bezeichner-Escapesequenz\0\
        Unbeendetes RegExp-Literal\0\
        Zeichenkette ohne Ende\0\
        Template ohne Ende\0\
        Unerwartete '#'\0\
        Unerwartetes '@'\0\
        Unerwartetes '\\' in Bezeichner\0\
        Unerwartete Zeichen in bin\u{00e4}rem Zahlenliteral\0\
        Unerwartete Zeichen in hexadezimalem Zahlenliteral\0\
        Unerwartete Zeichen in Zahlenliteral\0\
        Unerwartete Zeichen in oktalem Zahlenliteral\0\
        Unerwartetes Steuerzeichen\0\
        Die Unicode Bytereihenfolge-Markierung (BOM) darf nicht vor #! zu Beginn eines Skripts erscheinen\0\
        Blockkommentar ohne Beginn\0\
        Was soll dieser '{1}' Humbug?\0\
        Facebook says '>' is not allowed; write {{'>'} or &gt; instead\0\
        do-whiley do\0\
        'for' loop \u{1f503}\0\
        when (not if) statement\0\
        whenever loop\0\
        what-the-heck-is-wrong-with statement\0\
        smart quotes \u{1f9e0} require the SmartyPantsJS DLC\0\
        Facebook says '}' is not allowed; write {{'}'} instead\0\
        it's Big*Int*, not Big*Decimal*\0\
        BigExponInt is an ES2069 feature\0\
        keep your RegExp flags simple, please\0\
        a do-whiley do\0\
        a 'for' loop \u{1f503}\0\
        a whenever loop\0\
        a what-the-heck-is-wrong-with statement\0\
        a {{0} b }} c\0\
        a when (not if) statement\0\
        binary number lost its genitals\0\
        hold up! \u{270b} no '{0}' allowed\0\
        U+10FFFF is the limit. what are you trying to accomplish?\0\
        it won't fit \u{1f930}\0\
        fugitive \u{1f9b9}\u{200d}\u{2642}\u{fe0f} is not allowed in identifiers\0\
        stop being so fancy; just write '-'\0\
        what are you trying to do? This is a Unicode escape sequence, not a Wendy's \u{1f354}\0\
        expected {1:headlinese}\0\
        expected {1:singular}\0\
        free {1} and {0} {1} {2}\0\
        hex number literal has no digits\0\
        this number's too thicc for JavaScript; '{1}' would be used instead\0\
        quick-lint-js only works with nonbinary files\0\
        this ain't hex\0\
        that sequence should escape from this keyword cuz it's not allowed here\0\
        0Ops\0\
        legacy_octal_literals_may_not_contain_underscores\0\
        too__many__underscores\0\
        too_many_underscores_____\0\
        but you said '0o'...\0\
        scientists don't use octal\0\
        <octupus-with-no-legs> has no digits\0\
        see here\0\
        I wish you never happened\0\
        this {0} looks fishy\0\
        this {1} looks fishy\0\
        you accidentally commented out your whole program\0\
        runaway \\u!\0\
        /unclosed regexp literal\0\
        \"unclosed string literal\0\
        `unclosed template\0\
        #unexpected\0\
        unexp@cted\0\
        unex\\pected\0\
        this number does not identify as binary\0\
        unexpected characters in hex literal\0\
        does not compute \u{1f916}\0\
        Cthulhu \u{1f419} is not happy\0\
        you lost control of your code\0\
        your editor BOMd \u{1f4a3} your s#!t \u{1f4a9}\0\
        /*\0\
        what is this '{1}' nonsense?\0\
        le lit\u{00e9}ral BigInt contient un s\u{00e9}parateur de d\u{00e9}cimales\0\
        le lit\u{00e9}ral BigInt contient un exposant\0\
        un litt\u{00e9}ral RegExp ne peut contenir des \u{00e9}chappements Unicode\0\
        le litt\u{00e9}ral num\u{00e9}rique binaire n'a pas de chiffres\0\
        caract\u{00e8}re non autoris\u{00e9} dans les identifiants\0\
        un point de code dans une s\u{00e9}quence d'\u{00e9}chappement Unicode ne peut d\u{00e9}passer la valeur U+10FFFF\0\
        point de code hors limite\0\
        caract\u{00e8}re \u{00e9}chapp\u{00e9} non permis dans les identifiants\0\
        nombres hexadecimaux attendus dans une s\u{00e9}quence d'\u{00e9}chappement Unicode\0\
        le litt\u{00e9}ral num\u{00e9}rique hex n'a pas de chiffres\0\
        s\u{00e9}quence UTF-8 invalide\0\
        s\u{00e9}quence d'\u{00e9}chappement hex invalide: {0}\0\
        les mots-cl\u{00e9}s ne peuvent pas contenir de s\u{00e9}quence d'\u{00e9}chappement\0\
        un litt\u{00e9}ral octal classique ne peut pas \u{00ea}tre de type BigInt\0\
        un litt\u{00e9}ral octal classique ne peut pas contenir de tiret de soulignement\0\
        le litt\u{00e9}ral num\u{00e9}rique contient plusieurs tirets de soulignement cons\u{00e9}cutifs\0\
        le litt\u{00e9}ral num\u{00e9}rique est suivi d'un tiret de soulignement\0\
        un litt\u{00e9}ral octal ne peut avoir de partie d\u{00e9}cimale\0\
        un litt\u{00e9}ral octal ne peut avoir d'exposant\0\
        le litt\u{00e9}ral num\u{00e9}rique octal n'a pas de chiffres\0\
        commentaire de bloc non ferm\u{00e9}\0\
        s\u{00e9}quence d'\u{00e9}chappement d'identifiant non ferm\u{00e9}e\0\
        litt\u{00e9}ral regexp non ferm\u{00e9}\0\
        litt\u{00e9}ral string non ferm\u{00e9}\0\
        template non ferm\u{00e9}\0\
        '#' inattendu\0\
        '@' inattendu\0\
        '\\' inattendu dans un identifiant\0\
        caract\u{00e8}res inattendus dans un litt\u{00e9}ral binaire\0\
        caract\u{00e8}res inattendus dans un litt\u{00e9}ral hex\0\
        caract\u{00e8}res inattendus dans un litt\u{00e9}ral num\u{00e9}rique\0\
        caract\u{00e8}res inattendus dans un litt\u{00e9}ral octal\0\
        caract\u{00e8}re de contr\u{00f4}le inattendu\0\
        un indicateur d'ordre des octets (BOM) ne peut figurer avant #! au d\u{00e9}but d'un script\0\
        commentaire de bloc non ouvert\0\
        '>' n\u{00e3}o \u{00e9} permitido diretamente em um texto JSX; use {{'>'} ou &gt;\0\
        loop 'do-while'\0\
        loop 'for'\0\
        instru\u{00e7}\u{00e3}o 'if'\0\
        loop 'while'\0\
        instru\u{00e7}\u{00e3}o 'with'\0\
        '{0}' n\u{00e3}o \u{00e9} permitido para strings; use {1}\0\
        '}' n\u{00e3}o \u{00e9} permitido diretamente em um texto JSX; use {{'}'}\0\
        valor BigInt cont\u{00e9}m casa decimal\0\
        valor BigInt cont\u{00e9}m expoente\0\
        flags do RegExp n\u{00e3}o podem conter sequ\u{00ea}ncias de escape Unicode\0\
        um loop 'do-while'\0\
        um loop 'for'\0\
        um loop 'while'\0\
        uma instru\u{00e7}\u{00e3}o 'with'\0\
        uma instru\u{00e7}\u{00e3}o com label\0\
        uma instru\u{00e7}\u{00e3}o 'if'\0\
        n\u{00fa}mero bin\u{00e1}rio n\u{00e3}o tem d\u{00ed}gitos\0\
        caracter n\u{00e3}o \u{00e9} permitido em identificadores\0\
        code point em sequ\u{00ea}ncias de escape Unicode n\u{00e3}o pode ser maior que U+10FFFF\0\
        code point fora do intervalo permitido\0\
        caracter escapado n\u{00e3}o \u{00e9} permiido em identificadores\0\
        escapar '-' n\u{00e3}o \u{00e9} permitido em nomes de tags; use '-'\0\
        d\u{00ed}gitos hexadecimais s\u{00e3}o esperados em uma sequ\u{00ea}ncia de escape Unicode\0\
        esperado {1:headlinese}\0\
        esperado {1:singular}\0\
        n\u{00fa}mero hexadecimal n\u{00e3}o tem d\u{00ed}gitos\0\
        inteiro n\u{00e3}o pode ser representado e vai ser arredondado para '{1}'\0\
        sequ\u{00ea}ncia UTF-8 inv\u{00e1}lida\0\
        sequ\u{00ea}ncia de escape hex inv\u{00e1}lida: {0}\0\
        palavras-chave n\u{00e3}o podem conter sequ\u{00ea}ncias de escape\0\
        instru\u{00e7}\u{00e3}o com label\0\
        n\u{00fa}mero octal legado n\u{00e3}o pode ser BigInt\0\
        n\u{00fa}mero octal legado n\u{00e3}o pode conter underscore\0\
        n\u{00fa}mero cont\u{00e9}m underscores consecutivos\0\
        n\u{00fa}mero cont\u{00e9}m underscore(s) no final\0\
        n\u{00fa}mero octal n\u{00e3}o pode ter casa decimal\0\
        n\u{00fa}mero octal n\u{00e3}o pode ter expoente\0\
        n\u{00fa}mero octal n\u{00e3}o tem d\u{00ed}gitos\0\
        veja aqui\0\
        algo aconteceu\0\
        isso {0} parece suspeito\0\
        isso {1} parece suspeito\0\
        bloco de coment\u{00e1}rio n\u{00e3}o encerrado\0\
        sequ\u{00ea}ncia de escape n\u{00e3}o foi fechada\0\
        regexp n\u{00e3}o encerrado\0\
        string n\u{00e3}o encerrada\0\
        template n\u{00e3}o foi fechado\0\
        '#' inesperado\0\
        '@' inesperado\0\
        '\\' inesperado em um identificador\0\
        caracteres inesperados em um n\u{00fa}mero bin\u{00e1}rio\0\
        caracteres inesperados em um n\u{00fa}mero hexadecimal\0\
        caracteres inesperados em um n\u{00fa}mero\0\
        caracteres inesperados em um n\u{00fa}mero octal\0\
        caracter de control inesperado\0\
        unicode byte order mark (BOM) n\u{00e3}o pode aparecer antes do #! no come\u{00e7}o do script\0\
        bloco de coment\u{00e1}rio n\u{00e3}o foi aberto\0\
        BigInt heltallitter\u{00e4}r inneh\u{00e5}ller decimaler\0\
        BigInt heltallitter\u{00e4}r inneh\u{00e5}ller exponent\0\
        bin\u{00e4}ra nummerlitteraler has inga siffror\0\
        tecknet \u{00e4}r inte till\u{00e5}tet i indentifierare\0\
        kod punkt ur span\0\
        flykttecken \u{00e4}r inte till\u{00e5}tet i indentifierare\0\
        f\u{00f6}rv\u{00e4}ntade hexadecimala siffror i Unicode flyktsekvens\0\
        hex nummerlitteral har inga siffror\0\
        ogiltig UTF-8 sekvens\0\
        ogiltig kring\u{00e5}ende hex sekvens: {0}\0\
        nyckelord kan inte inneh\u{00e5}lla en flyktsekvens\0\
        \u{00e4}rftligt octal nummerlitteral kan inte vara BigInt\0\
        \u{00e4}rftligt octal nummerlitteral kan inte inneh\u{00e5}lla understr\u{00e4}ck\0\
        numerlitter\u{00e4}r inneh\u{00e5}ller upprepande understr\u{00e4}ck\0\
        nummerlitter\u{00e4}r inneh\u{00e5}ller efterf\u{00f6}ljande understr\u{00e4}ck\0\
        oktal nummerlitter\u{00e4}l kan inte ha decimaler\0\
        oktal nummerlitter\u{00e4}l kan inte ha exponent\0\
        oktal nummerlitteral har inga siffror\0\
        oavslutad kommentationsstycke\0\
        oavslutad identifierare flyktsekvens\0\
        oavslutad regexplitteral\0\
        oavslutad str\u{00e4}nglitteral\0\
        oavslutad mall\0\
        of\u{00f6}rv\u{00e4}ntad '#'\0\
        of\u{00f6}rv\u{00e4}ntad '@'\0\
        of\u{00f6}rv\u{00e4}ntad '\\' i identifierare\0\
        of\u{00f6}rv\u{00e4}ntat tecken i bin\u{00e4}rlitteral\0\
        of\u{00f6}rv\u{00e4}ntat tecken i hexlitteral\0\
        of\u{00f6}rv\u{00e4}ntat tecken i nummerlitteral\0\
        of\u{00f6}rv\u{00e4}ntat tecken i oktallitteral\0\
        of\u{00f6}rv\u{00e4}ntat kontrolltecken\0\
        unicode byte ordningsm\u{00e4}rke (BOM) kan inte f\u{00f6}rekomma f\u{00f6}re #! i b\u{00f6}rjan av skript\0\
        '>' is not allowed directly in JSX text; write {{'>'} or &gt; instead\0\
        'do-while' loop\0\
        'for' loop\0\
        'if' statement\0\
        'while' loop\0\
        'with' statement\0\
        '{0}' is not allowed for strings; use {1} instead\0\
        '}' is not allowed directly in JSX text; write {{'}'} instead\0\
        BigInt literal contains decimal point\0\
        BigInt literal contains exponent\0\
        RegExp literal flags cannot contain Unicode escapes\0\
        a 'do-while' loop\0\
        a 'for' loop\0\
        a 'while' loop\0\
        a 'with' statement\0\
        a labelled statement\0\
        a {{0} b }} c\0\
        an 'if' statement\0\
        binary number literal has no digits\0\
        character is not allowed in identifiers\0\
        code point in Unicode escape sequence must not be greater than U+10FFFF\0\
        code point out of range\0\
        escaped character is not allowed in identifiers\0\
        escaping '-' is not allowed in tag names; write '-' instead\0\
        expected hexadecimal digits in Unicode escape sequence\0\
        expected {1:headlinese}\0\
        expected {1:singular}\0\
        free {1} and {0} {1} {2}\0\
        hex number literal has no digits\0\
        integer cannot be represented and will be rounded to '{1}'\0\
        invalid UTF-8 sequence\0\
        invalid hex escape sequence: {0}\0\
        keywords cannot contain escape sequences\0\
        labelled statement\0\
        legacy octal literal may not be BigInt\0\
        legacy octal literals may not contain underscores\0\
        number literal contains consecutive underscores\0\
        number literal contains trailing underscore(s)\0\
        octal literal may not have decimal\0\
        octal literal may not have exponent\0\
        octal number literal has no digits\0\
        second message here\0\
        see here\0\
        something happened\0\
        test for multiple messages\0\
        this {0} looks fishy\0\
        this {1} looks fishy\0\
        unclosed block comment\0\
        unclosed identifier escape sequence\0\
        unclosed regexp literal\0\
        unclosed string literal\0\
        unclosed template\0\
        unexpected '#'\0\
        unexpected '@'\0\
        unexpected '\\' in identifier\0\
        unexpected characters in binary literal\0\
        unexpected characters in hex literal\0\
        unexpected characters in number literal\0\
        unexpected characters in octal literal\0\
        unexpected control character\0\
        unicode byte order mark (BOM) cannot appear before #! at beginning of script\0\
        unopened block comment\0\
        what is this '{1}' nonsense?\0\
".as_bytes();

pub const TRANSLATION_DATA_LOCALE_TABLE: &str = "\
        de\0\
        en_US@snarky\0\
        fr_FR\0\
        pt_BR\0\
        sv_SE\0\
        \0\
";

// quick-lint-js finds bugs in JavaScript programs.
// Copyright (C) 2020  Matthew "strager" Glazar
//
// This file is part of quick-lint-js.
//
// quick-lint-js is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// quick-lint-js is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with quick-lint-js.  If not, see <https://www.gnu.org/licenses/>.
