#!/usr/bin/env python

import pathlib
import shutil

ROOT = pathlib.Path(__file__).parent / ".."


def main() -> None:
    project_dir = ROOT / "rust-workspace-crateunotest"
    new_project_from_template(project_dir, template_dir=ROOT / "rust-workspace")
    cargotest_to_unotest(project_dir)

    project_dir = ROOT / "rust-fewsrc-crateunotest"
    new_project_from_template(project_dir, template_dir=ROOT / "rust")
    cargotest_to_unotest(project_dir)


def new_project_from_template(
    project_dir: pathlib.Path, template_dir: pathlib.Path
) -> None:
    delete_dir(project_dir)
    shutil.copytree(template_dir, project_dir, symlinks=True)
    (project_dir / "README").write_text(
        "THIS PROJECT WAS GENERATED BY generate-rust-project.py\n"
    )


def cargotest_to_unotest(project_dir: pathlib.Path) -> None:
    tests_dirs = list(project_dir.glob("**/tests"))
    for test_dir in tests_dirs:
        mod_dir = test_dir / "t"
        mod_dir.mkdir(exist_ok=False)

        mod_file = ""
        for test_file in test_dir.glob("test_*.rs"):
            test_file.rename(mod_dir / test_file.name)
            mod_file += f"mod {test_file.stem};\n"

        (test_dir / "test.rs").write_text(f"mod {mod_dir.name};\n")
        (mod_dir / "mod.rs").write_text(mod_file)


def delete_dir(dir: pathlib.Path) -> None:
    try:
        shutil.rmtree(dir)
    except FileNotFoundError:
        pass


if __name__ == "__main__":
    main()
